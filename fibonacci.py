#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
#kdb: 10 {x,sum -2#x}/0 1

def fibonacci_sequence(n):
    nterms = n
    n1, n2 = 0, 1
    count = 0
    sequence = []
    if nterms <= 0:
        print("Please enter a positive integer")
    elif nterms == 1:
        print("Fibonacci sequence upto",nterms,":")
        print(n1)
    else:
        print("Fibonacci sequence:")
        while count < nterms:
            sequence.append(n1)
            nth = n1 + n2
            n1 = n2
            n2 = nth
            count += 1
    return sequence

def fibonacci_sequence_limit(limit):
    max_value = limit
    n1, n2, nth = 1, 2, 0
    count = 0
    sequence = []
    while nth < max_value:
        sequence.append(n1)
        nth= n1 + n2
        n1 = n2
        n2 = nth

    sequence.append(n2)
    return sequence

def euler_solution ():
    max_value = 4000000
    sequence = fibonacci_sequence_limit(max_value)
    total = 0
    for num in sequence:
        if num % 2 == 0:
            total+=num
    return total
